代码参考
================================

```js
// package.json
  "devDependencies": {
    "extract-text-webpack-plugin": "^4.0.0-beta.0",
    "html-webpack-plugin": "^3.2.0",
    "mini-css-extract-plugin": "^0.8.0",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "webpack": "^4.41.2",
    "webpack-cli": "^3.3.9",
    "webpack-dev-server": "^3.9.0"
  },
  "dependencies": {
    "@babel/core": "^7.6.4",
    "@babel/preset-env": "^7.6.3",
    "autoprefixer": "^9.7.0",
    "babel-loader": "^8.0.6",
    "css-loader": "^3.2.0",
    "node-sass": "^4.13.0",
    "postcss": "^7.0.21",
    "postcss-loader": "^3.0.0",
    "sass-loader": "^8.0.0",
    "style-loader": "^1.0.0",
    "stylelint": "^11.1.1",
    "ts-loader": "^6.2.1",
    "typescript": "^3.6.4"
  }
```

```js
// webpack.config.js
var path  = require('path')
var root = path.resolve(__dirname)
const webpack = require('webpack');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const autoprefixer = require('autoprefixer');
const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
    devtool: 'source-map',
    mode: 'development',
    entry: {
        main: './src/main.js',
        index: './src/index.js'
    },
    output: {
        path: path.join(root, 'dist'),
        filename: '[name].js',
        publicPath: 'dist/'
    },
    module: {
        rules: [{
            test: /\.(sc|c)ss$/,
            use: [
                MiniCssExtractPlugin.loader,
                {
                    loader: 'css-loader',
                    options: {
                        sourceMap: true
                    }
                },
                {
                    loader: 'sass-loader',
                    options: {
                        sourceMap: true
                    }
                },
                {
                    loader: 'postcss-loader',
                    options: {
                        sourceMap: true
                    }
                }
            ]
        }, {
            test: /\.js$/,
            exclude: /node_modules/,
            use: {
                loader: 'babel-loader',
                options: {
                    cacheDirectory: true,
                    presets: ['@babel/preset-env']
                }
            }
        }, {
            test: /\.tsx?$/,
            use: {
                loader: 'ts-loader'
            }
        }]
    },
    devServer: {
        publicPath: '/dist'
    },
    plugins: [
        new HtmlWebpackPlugin({
            template: './src/index.html',
            filename: 'index.html',
            chunks: ['index']
        }),
        new HtmlWebpackPlugin({
            template: './src/main.html',
            filename: 'main.html',
            chunks: ['main']
        }),
        new MiniCssExtractPlugin({
            filename: '[name].css',
            chunkFilename: '[id].css'
        }),
        new OptimizeCssAssetsPlugin({
          assetNameRegExp: /\.css$/g,
          cssProcessor: require('cssnano'),
          cssProcessorPluginOptions: {
            preset: ['default', { discardComments: { removeAll: true } }],
          },
          canPrint: true
        })
    ],
    optimization: {
        // splitChunks: {
        //   chunks: 'all'
        // },
        minimize: true
    }
}
```

```js
// postcss.config.js
const autoprefixer = require('autoprefixer');
const stylelint = require('stylelint');

module.exports = {
    plugins: [
        autoprefixer({
          overrideBrowserslist: [
            '> 1%',
            'last 3 version',
            'android 4.2',
            'ie 8'
          ]
        }),
        stylelint({
          config: {
            rules: {
              'declaration-no-important': true
            }
          }
        })
    ]
}

```