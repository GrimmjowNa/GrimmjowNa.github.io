Modules
================================

## CommonJS

参考: [CommonJS规范](http://javascript.ruanyifeng.com/nodejs/module.html)

- Node使用CommonJS模块规范，内置的`require`命令用于加载模块文件。
- `require`命令的基本功能是，读入并执行一个JavaScript文件，然后返回该模块的exports对象。
- CommonJS规范加载模块是同步的，也就是说，只有加载完成，才能执行后面的操作
- module.exports属性表示当前模块对外输出的接口，其他文件加载该模块，实际上就是读取module.exports变量。
- 事件监听,使用`emit`和`on`

## ES6 Module

- 自动采用严格模式
- 导出
  - 命名导出(可使用as关键字)
  - 默认导出
- 导入
  - `import { name } from ...`相当于当前作用于下声明变量
  - 整体导入 `import * as module from ...`
  - 混合导入 `import React { Componment } from ...`
- 导入导出复合写法
  - `export { name } from ...`

### CommonJS & ES6 Module
 - Commonjs 动态的, 运行阶段
   - 导入是值拷贝 
 - ES6 Module 静态的, 编译阶段
   - 声明式的,不支持路径表达式
   - 位于模块顶层作用域, 不能放在`if`等语句下
   - 导入是值动态映射,只读

## 其他

- 非模块化文件
  - `import './jquery.min.js'`与直接用`script`标签效果一样
- AMD (Asynchronous Module Definition)
- UMD (Universal Module Definition) 通用模块标准

```js
// way 1
const a = 1;
export { a };

// way 2
export const a = 1;
```
