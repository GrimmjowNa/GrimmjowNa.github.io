样式处理
================================

使用`style-loader & css loader`会在页面上添加`style`标签的方式使样式生效.

样式生成文件使用`extract-text-webpack-plugin`(webpack<4), `mini-css-extract-plugin`插件

## mini-css-extract-plugin

```shell
npm install --save-dev mini-css-extract-plugin
```

- 将CSS提取为独立的文件的插件
- 对每个包含css的js文件都会创建一个CSS文件，支持按需加载css和sourceMap
- 使用`import()`导入的js文件中引入的css会单独打包
- 只能用在webpack4中，`extract-text-webpack-plugin`优点:
  - 异步加载
  - 不重复编译，性能更好
  - 更容易使用

```js
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = {
  module: {
    rules: [
      {
        test: /\.css$/,
        use: [
          {
            loader: MiniCssExtractPlugin.loader,
            options: {
              // publicPath 默认使用 webpackOptions.output中的publicPath
              publicPath: '../'
            },
          },
          'css-loader',
        ],
      }
    ]
  },
  plugins: [
    new MiniCssExtractPlugin({
      filename: '[name].css',
      chunkFilename: '[id].css',
    }),
  ]
}
```

## 样式预处理

### Sass

- Sass是css语法增强,目前有两种语法,主流使用SCSS
- `sass-loader` 将SCSS编译为css
- `node-sass`真正编译, `sass-loader`黏合剂作用

```shell
npm install sass-loader

SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/ npm install node-sass
```

```js
rules: [
      {
        test: /\.(sc|c)ss$/,
        use: [
          'style-loader',
          'css-loader',
          'sass-loader',
        ]
      }
    ]
```

### Postcss

`postcss-loader`结合`autoprefixer`自动加样式前缀

```shell
npm install postcss postcss-loader autoprefixer
```

```js
// webpack.config.js
{
    test: /\.(sc|c)ss$/,
    use: [
        MiniCssExtractPlugin.loader,
        'css-loader',
        'sass-loader',
        {
            loader: 'postcss-loader',
            // options: {
            //     config: {
            //         path: path.resolve(__dirname, './postcss.config.js')
            //     }
            // }
        }
    ]
}

// postcss.config.js
const autoprefixer = require('autoprefixer');

module.exports = {
    plugins: [
        autoprefixer({
          overrideBrowserslist: [
            '> 1%',
            'last 3 version',
            'android 4.2',
            'ie 8'
          ]
        })
    ]
}
```

## stylelint

参考: [stylelint rules](https://stylelint.io/user-guide/rules)

```shell
npm install stylelint
```

```js
// postcss.config.js
const stylelint = require('stylelint');

module.exports = {
    plugins: [
        stylelint({
          config: {
            rules: {
              'declaration-no-important': true
            }
          }
        })
    ]
}
```
