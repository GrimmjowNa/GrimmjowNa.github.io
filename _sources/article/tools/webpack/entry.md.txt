输入和输出
================================

## 资源处理流程

- `entry` -> `chunk` -> `budle`
  - 一个或多个入口 `entry`
  - `chunk`可以理解为从一个入口文件检索的所有依赖组成的代码块
  - `chunk`打包后的产物为`bundle`
  - 通常`entry`和`bundle`存在对应

## 入口

- 确定入口模块位置(开始打包位置)
- 定义`chunk` name. 单入口默认为 `main`
- 配置
  - context: 入口路径前缀, 绝对路径字符串, 默认工程根目录
  - entry:
    - 字符串: 路径
    - 数组: 多个资源预先合并, 打包时最后一个元素为实际入口路径
    - 对象: 属性为字符串或者数组

## 出口

- path: 资源输出路径,绝对路径
- publicPath: 资源请求位置,(通过首屏js再次加载的js路径)
- filename: 文件名或路径
  - 模板字符串,主要用于生产配置,开发不需要配置
    - [hash] 模块标识符(module identifier)的 hash
    - [chunkhash] chunk 内容的 hash
    - [name] 模块名称
    - [id] 模块标识符(module identifier)
    - [query] 模块的 query，例如，文件名 ? 后面的字符串
  - [chunkhash],[name],[id] 每个模块不同
